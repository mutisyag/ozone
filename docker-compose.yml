version: '2.2'

services:
  # Nginx load-balancing/proxy
  nginx:
    image: nginx:latest
    environment:
      # Override the default as we only need stream and not http.
      NGINX_CONF: |-
        user  nginx;
        worker_processes  1;

        error_log  /var/log/nginx/error.log warn;
        pid        /var/run/nginx.pid;

        events {
            worker_connections  1024;
        }

        stream {
          server {
            listen 8000;
            proxy_pass app:8000;
          }
        }
    command: /bin/sh -c 'echo "$$NGINX_CONF" > /etc/nginx/nginx.conf && exec nginx -g "daemon off;"'
    depends_on:
      - app

  # Main app DB
  postgres:
    image: postgres:9.6
    env_file:
      - ./docker/app.env
    volumes:
      - pg-data:/var/lib/postgresql/data

  # TUSD server
  tusd:
    image: tusproject/tusd:latest
    command: ["-upload-dir", "/srv/tusd-data", "-hooks-http", "http://app:8000/api/uploads/"]
    volumes:
      - tusd-uploads:/srv/tusd-data

  # Django application
  app:
    image: eaudeweb/ozone:dev
    env_file:
      - ./docker/app.env
    volumes:
     - tusd-uploads:/var/local/tusd_uploads
     - ./media:/var/local/media
    depends_on:
      - postgres
      - tusd

  # Weblate instance
  weblate:
    image: eaudeweb/ozone-weblate:dev
    env_file:
      - ./docker/weblate.env
    volumes:
      - weblate-data:/app/data
    depends_on:
      - postgres-weblate
      - redis-weblate

  # Weblate DB
  postgres-weblate:
    image: postgres:9.6
    env_file:
      - ./docker/weblate.env
    volumes:
      - pg-weblate-data:/var/lib/postgresql/data

  # Weblate redis
  redis-weblate:
    image: redis:4-alpine
    command: ["redis-server", "--appendonly", "yes"]
    volumes:
      - redis-data:/data

volumes:
  pg-data:
    driver: local
  tusd-uploads:
    driver: local
  media:
    driver: local
  weblate-data:
    driver: local
  pg-weblate-data:
    driver: local
  redis-data:
    driver: local
